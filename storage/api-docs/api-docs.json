{
    "openapi": "3.0.0",
    "info": {
        "title": "API de Gestão de Clientes",
        "description": "API para gestão e administração de clientes",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Julia Dourado",
            "url": "",
            "email": ""
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/admin/clients": {
            "description": "Endpoints relacionados ao cliente",
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Cria um novo cliente",
                "description": "Cria um cliente e retorna os detalhes do cliente criado.",
                "operationId": "2780248b39a4a49a9d63ac432f7378b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João Silva"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "joao@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Cliente criado com sucesso"
                    },
                    "422": {
                        "description": "Erro de validação ao criar cliente"
                    }
                }
            }
        },
        "/admin/projects": {
            "description": "Endpoints relacionados ao projeto",
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Create a new project",
                "description": "Stores a new project in the database",
                "operationId": "c6bde6b829987230e0e4d356ce57f863",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Project created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/admin/clients/{clientId}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Mostra um cliente existente",
                "description": "Mostra os dados de um cliente pelo ID.",
                "operationId": "fc9d3113c6fef10f2295ecbd75c6e92e",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "ID do cliente a ser mostrado",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cliente não encontrado"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clients"
                ],
                "summary": "Delete a client by ID",
                "description": "Deletes a client by its ID. If the client is not found, returns an error message. If the deletion fails, returns an error message.",
                "operationId": "5c40e791584a50c6d46c519e99a4e653",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "ID of the client to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Client successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cliente excluído com sucesso!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cliente não encontrado."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erro ao remover o cliente."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/clients/search": {
            "get": {
                "tags": [
                    "Clients"
                ],
                "summary": "Search for clients by query string",
                "description": "Searches for clients based on a query string. Returns a JSON response containing the found clients.",
                "operationId": "6a3f5884ce478e2e1d0564a8c87fbc24",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Query string to search clients",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Found clients",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request: Query string is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preencha o campo de busca."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No clients found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nenhum cliente encontrado."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erro ao procurar o cliente."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/projects/create": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Show project creation form",
                "description": "Displays the form for creating a new project",
                "operationId": "01a27e07da1321934711a7d635a208a9",
                "responses": {
                    "200": {
                        "description": "Project creation form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/projects/{projectId}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Show project details",
                "description": "Displays details of the specified project",
                "operationId": "e6e367c10186b19ab8293ef7966880a9",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the project to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Projects"
                ],
                "summary": "Update a project",
                "description": "Updates a project in the repository",
                "operationId": "5b7c208daf2c1bc5e695e71fefb81602",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the project to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project updated successfully"
                    },
                    "404": {
                        "description": "Project not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a project",
                "description": "Deletes a project from the repository",
                "operationId": "944d56a2237a5728c4dd74cf78a9e9de",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "ID of the project to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted successfully"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Client": {
                "required": [
                    "cpfcnpj",
                    "name",
                    "email",
                    "phone"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the client",
                        "type": "integer",
                        "example": 1
                    },
                    "cpfcnpj": {
                        "description": "The CPF or CNPJ of the client",
                        "type": "string",
                        "example": "12345678901"
                    },
                    "name": {
                        "description": "The name of the client",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "The email address of the client",
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "phone": {
                        "description": "The phone number of the client",
                        "type": "string",
                        "example": "+123456789"
                    },
                    "created_at": {
                        "description": "The date when the client was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "The date when the client was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T00:00:00Z"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    }
                },
                "type": "object"
            },
            "Project": {
                "required": [
                    "name",
                    "description",
                    "client_id",
                    "location_uf",
                    "installation_type",
                    "equipment"
                ],
                "properties": {
                    "id": {
                        "description": "The unique identifier of the project",
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "description": "The name of the project",
                        "type": "string",
                        "example": "Project Alpha"
                    },
                    "description": {
                        "description": "A description of the project",
                        "type": "string",
                        "example": "This project involves the installation of solar panels."
                    },
                    "client_id": {
                        "description": "The ID of the client associated with the project",
                        "type": "integer",
                        "example": 1
                    },
                    "location_uf": {
                        "description": "The state (UF) where the project is located",
                        "type": "string",
                        "example": "SP"
                    },
                    "installation_type": {
                        "description": "The type of installation for the project",
                        "type": "string",
                        "example": "Solar Panel"
                    },
                    "equipment": {
                        "description": "The list of equipment used in the project",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "Solar Panels"
                        }
                    },
                    "created_at": {
                        "description": "The date when the project was created",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "description": "The date when the project was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-10T00:00:00Z"
                    },
                    "client": {
                        "$ref": "#/components/schemas/Client"
                    }
                },
                "type": "object"
            },
            "StoreProjectRequest": {
                "required": [
                    "name",
                    "description",
                    "client_id",
                    "installation_type",
                    "location_uf",
                    "equipment"
                ],
                "properties": {
                    "name": {
                        "description": "Nome do projeto",
                        "type": "string"
                    },
                    "description": {
                        "description": "Descrição do projeto",
                        "type": "string"
                    },
                    "client_id": {
                        "description": "ID do cliente",
                        "type": "integer"
                    },
                    "installation_type": {
                        "description": "Tipo de instalação",
                        "type": "string"
                    },
                    "location_uf": {
                        "description": "Estado de localização",
                        "type": "string"
                    },
                    "equipment": {
                        "description": "Equipamento usado",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UpdateProjectRequest": {
                "required": [
                    "name",
                    "description",
                    "installation_type",
                    "location_uf",
                    "equipment"
                ],
                "properties": {
                    "name": {
                        "description": "Nome do projeto",
                        "type": "string"
                    },
                    "description": {
                        "description": "Descrição do projeto",
                        "type": "string"
                    },
                    "installation_type": {
                        "description": "Tipo de instalação",
                        "type": "string"
                    },
                    "location_uf": {
                        "description": "Estado de localização",
                        "type": "string"
                    },
                    "equipment": {
                        "description": "Equipamento usado",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Client",
            "description": "Client"
        },
        {
            "name": "Clients",
            "description": "Clients"
        },
        {
            "name": "Projects",
            "description": "Projects"
        }
    ]
}